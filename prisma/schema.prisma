generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "sqlite"
    // Using SQLite for mock fake data purpose
    url      = env("DATABASE_URL")
}

model User {
    id              String            @id @default(cuid())
    email           String?           @unique
    emailVerified   DateTime?
    password        String
    mealHistory     MealHistory[]
    bodyHistory     BodyHistory[]
    exerciseHistory ExerciseHistory[]
    diary           Diary[]
}

// Prisma SQL not support enum type from 2020
// enum MealHistoryEnum {
//     Morning
//     Lunch
//     Dinner
//     Snack
// }

model MealHistory {
    id        String   @id @default(uuid())
    user      User?    @relation(fields: [userId], references: [id])
    userId    String?
    image     String
    type      String   @default("Morning") //MealHistoryEnum
    createdAt DateTime
}

model BodyHistory {
    id        String   @id @default(uuid())
    fat       Float
    weight    Float
    createdAt DateTime
    user      User?    @relation(fields: [userId], references: [id])
    userId    String?
}

model ExerciseHistory {
    id        String   @id @default(uuid())
    content   String
    user      User?    @relation(fields: [userId], references: [id])
    userId    String?
    kcal      Float
    createdAt DateTime
}

model Diary {
    id        String   @id @default(uuid())
    content   String
    createdAt DateTime
    user      User?    @relation(fields: [userId], references: [id])
    userId    String?
}

model Column {
    id        String       @id @default(uuid())
    createdAt DateTime
    content   String
    image     String
    tags      ColumnTags[]
}

model ColumnTags {
    id     String   @id @default(uuid())
    name   String
    slug   String   @unique
    column Column[]
}
